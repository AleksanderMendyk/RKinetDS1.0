default:
 variable: 1

##dissolution model equations
#equation are written in particular format: C[i] - parameters for optimization where i is the parameter number, t - time
models:
  Zero order: C[1]*t                                                              # 1
  Zero order with lag time: C[1]*(t-C[2])                                         # 2
  Zero order with Q0: C[1]*t+C[2]                                                 # 3
  First order: 100*(1-exp(-C[1]*t))                                               # 4
  First order with lag time: 100*(1-exp(-C[1]*t-C[2]))                            # 5
  Second order: 100*(1-(C[1]/(1+C[1]*C[2]*t)))                                    # 6
  Second order with lag time: 100*(1-(C[1]/(1+C[1]*C[2]*(t-C[3]))))               # 7
  Third order: 100*(1-(1/(C[1]*t+1/(C[2])^2))^0.5)                                # 8
  Third order with lag time: 100*(1-(1/(C[1]*(t-C[2])+1/(C[3])^2))^0.5)           # 9
  Michaelis-Menten: 100*t/(C[1]+t)                                                # 10
  Michaelis-Menten with lag time: 100*(t-C[1])/(C[2]+t-C[1])                      # 11
  Weibull: 100*(1-exp(-((t^C[1]))/C[2]))                                          # 12
  Weibull with lag time: 100*(1-exp(-(((t-C[1])^C[2]))/C[3]))                     # 13
  Double Weibull: 100*(C[1]*(1-exp(-((t^C[2]))/C[3]))+C[4]*(1-exp(-((t^C[5]))/C[6]))) # 14
  Double Weibull with lag time: 100*(C[1]*(1-exp(-(((t-C[2])^C[3]))/C[4]))+C[5]*(1-exp(-(((t-C[2])^C[6]))/C[7])))   # 15
  Higuchi: C[1]*t^0.5                                                             # 16
  Higuchi with lag time: C[1]*(t-C[2])^0.5                                        # 17
  Hixson-Crowley: 100*(1-(1-C[1]*t)^3)                                            # 18
  Hixson-Crowley with lag time: 100*(1-(1-C[1]*(t-C[2]))^3)                       # 19
  Korsmeyer-Peppas: C[1]*t^C[2]                                                   # 20
  Korsmeyer-Peppas with lag time: C[1]*(t-C[2])^C[3]                              # 21
  Hill: 100*t^C[1]/C[2]^C[1]+t^C[1]                                               # 22
  Hill with lag time: 100*(t-C[1])^C[2]/C[3]^C[2]+(t-C[1])^C[2]                   # 23
  Hopfenberg: 100*(1-(1-C[1]*t)^C[2])                                             # 24
  Hopfenberg with lag time: 100*(1-(1-C[1]*(t-C[2]))^C[3])                        # 25
  Peppas-Sahlin: C[1]*t^C[2]+C[3]*t^(2*C[2])                                      # 26
  Peppas-Sahlin with lag time: C[1]*(t-C[2])^C[3]+C[4]*(t-C[2])^(2*C[3])          # 27
  Quadratic: 100*(C[1]*t^2+C[2]*t)                                                # 28
  Quadratic with lag time: 100*(C[1]*(t-C[2])^2+C[3]*(t-C[2]))                    # 29
  Logistic: C[1]/1+exp(-C[2]*(t-C[3]))                                            # 30
  Logistic with lag time: C[1]/1+exp(-C[2]*((t-C[3])-C[4]))                       # 31
  Gompertz: 100*(exp(-C[1]*(exp(-C[2]*log10(t)))))                                # 32
  Gompertz with lag time: 100*(exp(-C[1]*(exp(-C[2]*log10(t-(C[3]))))))           # 33
  Makoid-Banakar: C[1]*t^C[2]*exp(-C[3]*t)                                        # 34
  Makoid-Banakar with lag time: C[1]*(t-C[2])^C[3]*exp(-C[4]*(t-C[2]))            # 35
  Baker-Lonsdale: 100*(3/2*(1-(1-C[1])^(2/3))-C[2]*t)                             # 36
  Baker-Lonsdale with lag time: 100*(3/2*(1-(1-C[1])^(2/3))-C[2]*(t-C[3]))        # 37

##user selected models
selected_modelsx:
  selected_models: [1,3,5,7]
    
#optimization methods
optim_method:
  SANN: no #SANN method
  nloptr: yes #nloptr method
  NelderMead: no #NelderMead method
  genSA: no #gensa method
  rgenoud: no #rgenoud method

##user params
running_params:
  maxit_BFGS: 5000 #BFGS method  
  maxit_SANN: 10000 #SANN method
  maxit_nloptr: 10000 #nloptr method
  max_iter_gensa: 1500 #gensa method
  max_iter_rgenoud: 500 #rgenoud method
  maxit_NM: 500000 #NelderMead method
  optim_rel_tol: 1e-20
  
  opti_trace: yes #save drive space if FALSE

data:
  headers: yes
  input_data: "test_data.txt" #name of loaded data with a file format
  
  
